class PaginatorTemplate{constructor(t,{link:a,limit:e=10}){this.target=document.querySelector(t),this.link=a,this.limit=e,this.init()}init(){this.initTable(),this.initIndicator(),this.initData()}initTable(){const t=this.generateTable();this.body=t.querySelector("tbody"),this.appendToTarget(t)}initIndicator(){this.indicator=this.generateIndicator(),this.pageInput=this.indicator.querySelector("input"),this.maxPageNode=this.indicator.querySelector(".indicator__count"),this.nextButton=this.indicator.querySelector(".indicator__next"),this.appendToTarget(this.indicator)}generateIndicator(){const t=document.createElement("div");return t.classList.add("indicator"),t.innerHTML='<div class="indicator__main"><span class="indicator__span">Page:</span><input type="text" class="indicator__input"><span class="indicator__span">of <span class="indicator__count"></span></span></div><button class="indicator__next button">Next</button>',t}appendToTarget(t){this.target.append(t)}appendToBody(t){this.body.append(t)}clearBody(){this.body.innerHTML=""}async initData(){var{page:t,lastPage:a,items:e}=await this.getPage();this.setPageNumber(t),this.setMaxPageNumber(a),this.appendTableItems(e)}async getPage(t){return this.getPageByNumber(this.getCurrentPageNumber(t))}async getPageByNumber(t){try{return sendGet(`${this.link}/${t}/${this.limit}`)}catch(t){return{}}}getCurrentPageNumber(t){return t??(this.currentPage??0)+1}setPageNumber(t){this.pageInput.value=t,this.currentPage=t}setMaxPageNumber(t){this.maxPageNode.innerText=t}appendTableItems(t){t.forEach(t=>{this.appendToBody(this.generateTableRow(t))})}initIndicatorListeners(){this.nextButton.addEventListener("click",nextPage),this.pageInput.addEventListener("blur",changePage),this.pageInput.addEventListener("keypress",changePage)}}class UserPaginator extends PaginatorTemplate{constructor(...t){super(...t)}generateTable(){const t=document.createElement("table");return t.classList.add("pagination"),t.innerHTML='<thead class="pagination__head"><tr class="pagination__row"><th class="pagination__cell">Source</th><th class="pagination__cell">Shortened</th><th class="pagination__cell">Created at</th><th class="pagination__cell pagination__cell--button"></th><th class="pagination__cell pagination__cell--button"></th><th class="pagination__cell pagination__cell--button"></th></tr></thead><tbody class="pagination__body"></tbody>',t}generateTableRow({redirectLink:t,source:a,created_at:e,redirect_link_id:n}){const i=document.createElement("tr");i.classList.add("pagination__row"),i.dataset.id=n;e=new Date(e).toLocaleString();return i.innerHTML=`
    <tr class="pagination__row" >
    <td class="pagination__cell">${a}</td>
    <td class="pagination__cell"><a class="link" href="${t}">${t}</a></td>
    <td class="pagination__cell">${e}</td>
    <td class="pagination__cell pagination__cell--button"><button class="pagination__copy button copy">Copy</button></td>
    <td class="pagination__cell pagination__cell--button"><button class="pagination__edit button">Edit</button></td>
    <td class="pagination__cell pagination__cell--button"><button class="pagination__delete button">Delete</button></td>
    </tr>
    `,i}}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
