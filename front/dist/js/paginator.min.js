class PaginatorTemplate{constructor(t,{link:e,limit:a=10}){this.target=document.querySelector(t),this.link=e,this.limit=a,this.init()}init(){this.initTable(),this.initTableListeners(),this.initIndicator(),this.initData()}initTable(){const t=this.generateTable();this.body=t.querySelector("tbody"),this.appendToTarget(t)}initTableListeners(){this.body.addEventListener("click",this.clickHandler.bind(this))}clickHandler(t){var e=t.target.closest(".pagination__row");switch(t.target.blur(),t.target.dataset.type){case"copy":this.copyLink(e);break;case"edit":this.showEditPopup(e);break;case"delete":this.deleteItem(e);break;default:this.showStatsPopup(e)}}copyLink(t){var e=t.querySelector(".pagination__copy"),t=t.querySelector("a.link").innerText;copyValue(t,e)}showEditPopup(t){}deleteItem(t){var e=t.querySelector("a").innerText;this.popup=new Alert({text:`Are you really want to delete this redirection?<br><a class="link" target="_blank" rel="noopener noreferrer" href="${e}">${e}</a>`,title:"Attention"},()=>{this.deleteRedirection.bind(this)(t.dataset.id)})}async deleteRedirection(t){try{await sendDelete(`main/shorten/${t}`);this.changeData(this.currentPage)}catch(t){console.log(t),showError(t)}}showStatsPopup(t){}initIndicator(){this.initIndicatorBody(),this.initIndicatorListeners()}initIndicatorBody(){this.indicator=this.generateIndicator(),this.pageInput=this.indicator.querySelector("input"),this.maxPageNode=this.indicator.querySelector(".indicator__count"),this.nextButton=this.indicator.querySelector(".indicator__next"),this.appendToTarget(this.indicator)}generateIndicator(){const t=document.createElement("div");return t.classList.add("indicator"),t.innerHTML='<div class="indicator__main"><span class="indicator__span">Page:</span><input type="text" class="indicator__input"><span class="indicator__span">of <span class="indicator__count"></span></span></div><button class="indicator__next button">Next</button>',t}appendToTarget(t){this.target.append(t)}initIndicatorListeners(){this.nextButton.addEventListener("click",this.nextPage.bind(this)),this.pageInput.addEventListener("blur",this.changePage.bind(this)),this.pageInput.addEventListener("keypress",this.changePage.bind(this))}nextPage(){this.changeData()}changePage({type:t,key:e}){"Enter"!=e&&"blur"!=t||this.changeData(this.pageInput.value)}appendToBody(t){this.body.append(t)}clearBody(){this.body.innerHTML=""}async initData(){this.setMaxPageNumber(await this.changeData())}async changeData(t){var{page:e,lastPage:a,items:t}=await this.getPage(t);return this.setPageNumber(e),this.appendTableItems(t),a}async getPage(t){return this.getPageByNumber(this.getCurrentPageNumber(t))}async getPageByNumber(t){try{return sendGet(`${this.link}/${t}/${this.limit}`)}catch(t){return{}}}getCurrentPageNumber(t){return this.currentPage&&this.currentPage==this.maxPageNode.innerText?1:+this.maxPageNode.innerText<+t?this.currentPage:t??(this.currentPage??0)+1}setPageNumber(t){this.pageInput.value=t,this.currentPage=t}setMaxPageNumber(t){this.maxPageNode.innerText=t}appendTableItems(t){this.clearBody(),t.forEach(t=>{this.appendToBody(this.generateTableRow(t))})}}class UserPaginator extends PaginatorTemplate{constructor(...t){super(...t)}generateTable(){const t=document.createElement("table");return t.classList.add("pagination"),t.innerHTML='<thead class="pagination__head"><tr class="pagination__row"><th class="pagination__cell">Source</th><th class="pagination__cell">Shortened</th><th class="pagination__cell">Created at</th><th class="pagination__cell pagination__cell--button"></th><th class="pagination__cell pagination__cell--button"></th><th class="pagination__cell pagination__cell--button"></th></tr></thead><tbody class="pagination__body"></tbody>',t}generateTableRow({redirectLink:t,source:e,created_at:a,redirect_link_id:i}){const n=document.createElement("tr");n.classList.add("pagination__row"),n.dataset.id=i;a=new Date(a).toLocaleString();return n.innerHTML=`
    <tr class="pagination__row" >
    <td class="pagination__cell">${e}</td>
    <td class="pagination__cell"><a class="link" target="_blank" rel="noopener noreferrer" href="${t}">${t}</a></td>
    <td class="pagination__cell">${a}</td>
    <td class="pagination__cell pagination__cell--button"><button data-type="copy" class="pagination__copy button copy">Copy</button></td>
    <td class="pagination__cell pagination__cell--button"><button data-type="edit" class="pagination__edit button">Edit</button></td>
    <td class="pagination__cell pagination__cell--button"><button data-type="delete" class="pagination__delete button">Delete</button></td>
    </tr>
    `,n}}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
