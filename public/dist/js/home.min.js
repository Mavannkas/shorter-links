const back=document.querySelector(".create__side--back"),backInput=document.querySelector(".create__side--back input"),front=document.querySelector(".create__side--front input"),button=document.querySelector(".create__button"),output=document.querySelector(".create__info"),custom=document.querySelector("#custom"),main=async()=>{button.innerText="Cut again!";var t=front.value,e=custom.value;clear(),await sleep(100);try{await checkData(t,e);var c=await postUserData(t,e);setSuccess(c.redirectLink)}catch(t){setError(t)}},clear=()=>{front.value="",custom.value="",back.classList.remove("swing"),front.classList.remove(".create__side--off"),clearOutput()},clearOutput=()=>{output.innerText="Please wait...",output.classList.remove("create__info--error","create__info--success"),output.classList.add("create__info--await")},sleep=e=>new Promise(t=>setTimeout(t,e)),postUserData=(t,e)=>sendPost("main/shorten",getInputObject(t,e)),getInputObject=(t,e)=>{const c={source:t};return e&&(c.customID=e),c},checkData=async(t,e)=>{if(!t)throw"You must enter link!";if(e&&e.length<3)throw"Custom url must have at least 3 chars"},setSuccess=t=>{output.innerText="Success",output.classList.add("create__info--success"),backInput.value=t,setAnimation()},setAnimation=()=>{back.classList.add("swing")},setError=t=>{output.innerText="string"==typeof t?t:t.join(". "),output.classList.add("create__info--error")};button.addEventListener("click",main),backInput.addEventListener("click",async()=>{clearOutput(),await sleep(100),backInput.select(),backInput.setSelectionRange(0,99999),document.execCommand("copy"),output.innerText="Copied to the clipboard",output.classList.add("create__info--success")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaG9tZS5taW4uanMiLCJzb3VyY2VzIjpbImhvbWUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYmFjayA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jcmVhdGVfX3NpZGUtLWJhY2snKTtcbmNvbnN0IGJhY2tJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jcmVhdGVfX3NpZGUtLWJhY2sgaW5wdXQnKTtcbmNvbnN0IGZyb250ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNyZWF0ZV9fc2lkZS0tZnJvbnQgaW5wdXQnKTtcbmNvbnN0IGJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jcmVhdGVfX2J1dHRvbicpO1xuY29uc3Qgb3V0cHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNyZWF0ZV9faW5mbycpO1xuY29uc3QgY3VzdG9tID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2N1c3RvbScpO1xuXG5jb25zdCBtYWluID0gYXN5bmMgKCkgPT4ge1xuICBidXR0b24uaW5uZXJUZXh0ID0gJ0N1dCBhZ2FpbiEnO1xuICBjb25zdCBzb3VyY2VWYWx1ZSA9IGZyb250LnZhbHVlO1xuICBjb25zdCBjdXN0b21WYWx1ZSA9IGN1c3RvbS52YWx1ZTtcblxuICBjbGVhcigpO1xuXG4gIGF3YWl0IHNsZWVwKDEwMCk7XG4gIHRyeSB7XG4gICAgYXdhaXQgY2hlY2tEYXRhKHNvdXJjZVZhbHVlLCBjdXN0b21WYWx1ZSk7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBwb3N0VXNlckRhdGEoc291cmNlVmFsdWUsIGN1c3RvbVZhbHVlKTtcbiAgICBzZXRTdWNjZXNzKHJlc3BvbnNlLnJlZGlyZWN0TGluayk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgc2V0RXJyb3IoZXJyb3IpO1xuICB9XG59O1xuXG5jb25zdCBjbGVhciA9ICgpID0+IHtcbiAgZnJvbnQudmFsdWUgPSAnJztcbiAgY3VzdG9tLnZhbHVlID0gJyc7XG5cbiAgYmFjay5jbGFzc0xpc3QucmVtb3ZlKCdzd2luZycpO1xuICBmcm9udC5jbGFzc0xpc3QucmVtb3ZlKCcuY3JlYXRlX19zaWRlLS1vZmYnKTtcbiAgY2xlYXJPdXRwdXQoKTtcbn07XG5cbmNvbnN0IGNsZWFyT3V0cHV0ID0gKCkgPT4ge1xuICBvdXRwdXQuaW5uZXJUZXh0ID0gJ1BsZWFzZSB3YWl0Li4uJztcbiAgb3V0cHV0LmNsYXNzTGlzdC5yZW1vdmUoJ2NyZWF0ZV9faW5mby0tZXJyb3InLCAnY3JlYXRlX19pbmZvLS1zdWNjZXNzJyk7XG4gIG91dHB1dC5jbGFzc0xpc3QuYWRkKCdjcmVhdGVfX2luZm8tLWF3YWl0Jyk7XG59O1xuXG5jb25zdCBzbGVlcCA9IChtcykgPT4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgbXMpKTtcblxuY29uc3QgcG9zdFVzZXJEYXRhID0gKHNvdXJjZVZhbHVlLCBjdXN0b21WYWx1ZSkgPT5cbiAgc2VuZFBvc3QoJ21haW4vc2hvcnRlbicsIGdldElucHV0T2JqZWN0KHNvdXJjZVZhbHVlLCBjdXN0b21WYWx1ZSkpO1xuXG5jb25zdCBnZXRJbnB1dE9iamVjdCA9IChzb3VyY2VWYWx1ZSwgY3VzdG9tVmFsdWUpID0+IHtcbiAgY29uc3QgcmVzID0ge1xuICAgIHNvdXJjZTogc291cmNlVmFsdWUsXG4gIH07XG5cbiAgaWYgKGN1c3RvbVZhbHVlKSB7XG4gICAgcmVzLmN1c3RvbUlEID0gY3VzdG9tVmFsdWU7XG4gIH1cblxuICByZXR1cm4gcmVzO1xufTtcblxuY29uc3QgY2hlY2tEYXRhID0gYXN5bmMgKGlucHV0LCBjdXN0b21JbnB1dCkgPT4ge1xuICBpZiAoIWlucHV0KSB7XG4gICAgdGhyb3cgJ1lvdSBtdXN0IGVudGVyIGxpbmshJztcbiAgfVxuXG4gIGlmIChjdXN0b21JbnB1dCAmJiBjdXN0b21JbnB1dC5sZW5ndGggPCAzKSB7XG4gICAgdGhyb3cgJ0N1c3RvbSB1cmwgbXVzdCBoYXZlIGF0IGxlYXN0IDMgY2hhcnMnO1xuICB9XG59O1xuXG5jb25zdCBzZXRTdWNjZXNzID0gKG1zZykgPT4ge1xuICBvdXRwdXQuaW5uZXJUZXh0ID0gJ1N1Y2Nlc3MnO1xuICBvdXRwdXQuY2xhc3NMaXN0LmFkZCgnY3JlYXRlX19pbmZvLS1zdWNjZXNzJyk7XG4gIGJhY2tJbnB1dC52YWx1ZSA9IG1zZztcbiAgc2V0QW5pbWF0aW9uKCk7XG59O1xuXG5jb25zdCBzZXRBbmltYXRpb24gPSAoKSA9PiB7XG4gIGJhY2suY2xhc3NMaXN0LmFkZCgnc3dpbmcnKTtcbn07XG5cbmNvbnN0IHNldEVycm9yID0gKG1zZykgPT4ge1xuICBvdXRwdXQuaW5uZXJUZXh0ID0gdHlwZW9mIG1zZyA9PT0gJ3N0cmluZycgPyBtc2cgOiBtc2cuam9pbignLiAnKTtcbiAgb3V0cHV0LmNsYXNzTGlzdC5hZGQoJ2NyZWF0ZV9faW5mby0tZXJyb3InKTtcbn07XG5cbmJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIG1haW4pO1xuXG5iYWNrSW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBhc3luYyAoKSA9PiB7XG4gIGNsZWFyT3V0cHV0KCk7XG4gIGF3YWl0IHNsZWVwKDEwMCk7XG4gIGJhY2tJbnB1dC5zZWxlY3QoKTtcbiAgYmFja0lucHV0LnNldFNlbGVjdGlvblJhbmdlKDAsIDk5OTk5KTtcbiAgZG9jdW1lbnQuZXhlY0NvbW1hbmQoJ2NvcHknKTtcbiAgb3V0cHV0LmlubmVyVGV4dCA9ICdDb3BpZWQgdG8gdGhlIGNsaXBib2FyZCc7XG4gIG91dHB1dC5jbGFzc0xpc3QuYWRkKCdjcmVhdGVfX2luZm8tLXN1Y2Nlc3MnKTtcbn0pO1xuIl0sIm5hbWVzIjpbImJhY2siLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJiYWNrSW5wdXQiLCJmcm9udCIsImJ1dHRvbiIsIm91dHB1dCIsImN1c3RvbSIsIm1haW4iLCJhc3luYyIsImlubmVyVGV4dCIsInNvdXJjZVZhbHVlIiwidmFsdWUiLCJjdXN0b21WYWx1ZSIsImNsZWFyIiwic2xlZXAiLCJjaGVja0RhdGEiLCJyZXNwb25zZSIsInBvc3RVc2VyRGF0YSIsInNldFN1Y2Nlc3MiLCJyZWRpcmVjdExpbmsiLCJlcnJvciIsInNldEVycm9yIiwiY2xhc3NMaXN0IiwicmVtb3ZlIiwiY2xlYXJPdXRwdXQiLCJhZGQiLCJQcm9taXNlIiwic2V0VGltZW91dCIsInJlc29sdmUiLCJtcyIsInNlbmRQb3N0IiwiZ2V0SW5wdXRPYmplY3QiLCJyZXMiLCJzb3VyY2UiLCJjdXN0b21JRCIsImlucHV0IiwiY3VzdG9tSW5wdXQiLCJsZW5ndGgiLCJtc2ciLCJzZXRBbmltYXRpb24iLCJqb2luIiwiYWRkRXZlbnRMaXN0ZW5lciIsInNlbGVjdCIsInNldFNlbGVjdGlvblJhbmdlIiwiZXhlY0NvbW1hbmQiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEtBQU9DLFNBQVNDLGNBQWMsdUJBQzlCQyxVQUFZRixTQUFTQyxjQUFjLDZCQUNuQ0UsTUFBUUgsU0FBU0MsY0FBYyw4QkFDL0JHLE9BQVNKLFNBQVNDLGNBQWMsbUJBQ2hDSSxPQUFTTCxTQUFTQyxjQUFjLGlCQUNoQ0ssT0FBU04sU0FBU0MsY0FBYyxXQUVoQ00sS0FBT0MsVUFDWEosT0FBT0ssVUFBWSxhQUNuQixJQUFNQyxFQUFjUCxNQUFNUSxNQUNwQkMsRUFBY04sT0FBT0ssTUFFM0JFLGNBRU1DLE1BQU0sS0FDWixVQUNRQyxVQUFVTCxFQUFhRSxHQUM3QixJQUFNSSxRQUFpQkMsYUFBYVAsRUFBYUUsR0FDakRNLFdBQVdGLEVBQVNHLGNBQ3BCLE1BQU9DLEdBQ1BDLFNBQVNELEtBSVBQLE1BQVEsS0FDWlYsTUFBTVEsTUFBUSxHQUNkTCxPQUFPSyxNQUFRLEdBRWZaLEtBQUt1QixVQUFVQyxPQUFPLFNBQ3RCcEIsTUFBTW1CLFVBQVVDLE9BQU8sc0JBQ3ZCQyxlQUdJQSxZQUFjLEtBQ2xCbkIsT0FBT0ksVUFBWSxpQkFDbkJKLE9BQU9pQixVQUFVQyxPQUFPLHNCQUF1Qix5QkFDL0NsQixPQUFPaUIsVUFBVUcsSUFBSSx3QkFHakJYLE1BQVEsR0FBUSxJQUFJWSxRQUFRLEdBQWFDLFdBQVdDLEVBQVNDLElBRTdEWixhQUFlLENBQUNQLEVBQWFFLElBQ2pDa0IsU0FBUyxlQUFnQkMsZUFBZXJCLEVBQWFFLElBRWpEbUIsZUFBaUIsQ0FBQ3JCLEVBQWFFLEtBQ25DLE1BQU1vQixFQUFNLENBQ1ZDLE9BQVF2QixHQU9WLE9BSklFLElBQ0ZvQixFQUFJRSxTQUFXdEIsR0FHVm9CLEdBR0hqQixVQUFZUCxNQUFPMkIsRUFBT0MsS0FDOUIsSUFBS0QsRUFDSCxLQUFNLHVCQUdSLEdBQUlDLEdBQWVBLEVBQVlDLE9BQVMsRUFDdEMsS0FBTSx5Q0FJSm5CLFdBQWEsSUFDakJiLE9BQU9JLFVBQVksVUFDbkJKLE9BQU9pQixVQUFVRyxJQUFJLHlCQUNyQnZCLFVBQVVTLE1BQVEyQixFQUNsQkMsZ0JBR0lBLGFBQWUsS0FDbkJ4QyxLQUFLdUIsVUFBVUcsSUFBSSxVQUdmSixTQUFXLElBQ2ZoQixPQUFPSSxVQUEyQixpQkFBUjZCLEVBQW1CQSxFQUFNQSxFQUFJRSxLQUFLLE1BQzVEbkMsT0FBT2lCLFVBQVVHLElBQUksd0JBR3ZCckIsT0FBT3FDLGlCQUFpQixRQUFTbEMsTUFFakNMLFVBQVV1QyxpQkFBaUIsUUFBU2pDLFVBQ2xDZ0Isb0JBQ01WLE1BQU0sS0FDWlosVUFBVXdDLFNBQ1Z4QyxVQUFVeUMsa0JBQWtCLEVBQUcsT0FDL0IzQyxTQUFTNEMsWUFBWSxRQUNyQnZDLE9BQU9JLFVBQVksMEJBQ25CSixPQUFPaUIsVUFBVUcsSUFBSSJ9
